-> encoding: UTF-8

Module `exception`
==================

-> Functionality "Interpret Robin Program" is implemented by
-> shell command "bin/robin %(test-file)"

-> Tests for functionality "Interpret Robin Program"

This module exports macros for catching exceptions.  In particular, the
ability to import this module means your implementation of Robin
supports catching exceptions.

`raise` itself is in the core, because it can be used to abort the program
with an error, even in an implementation which does not support catching
exceptions.  However, because one might reasonably expect to find it in
this module, this module re-exports it as well.

### `catch` ###

`catch` installs an exception handler.

If an exception is raised when evaluating the final argument of
`catch`, the exception value is bound to the symbol given as the
first argument of `catch`, and the second argument of `catch` is
evaluated in that new environment.

| (robin (0 1) ((pure (0 1) *) (exception (0 1) *))
|   (catch error (pair error #f)
|     (raise (literal (nasty-value . 999999)))))
= ((nasty-value . 999999) . #f)

`catch` can catch exceptions raised by core macros.

| (robin (0 1) ((pure (0 1) *) (exception (0 1) *))
|   (catch error (pair error 5)
|     (head #f)))
= ((expected-pair . #f) . 5)

The innermost `catch` will catch the exception.

| (robin (0 1) ((pure (0 1) *) (exception (0 1) *))
|   (catch error (pair error 5)
|     (catch error (pair error 9)
|       (head #f))))
= ((expected-pair . #f) . 9)

An exception raised from within an exception handler is
caught by the next innermost exception handler.

| (robin (0 1) ((pure (0 1) *) (exception (0 1) *))
|   (catch error (pair error 5)
|     (catch error (pair error 9)
|       (catch error (raise (pair error error))
|         (raise 7)))))
= ((7 . 7) . 9)

`catch` expects its first argument to be an identifier.

| (robin (0 1) ((pure (0 1) *) (exception (0 1) *))
|   (catch #f 23 (head #f)))
? uncaught exception: (illegal-arguments #f 23 (head #f))

`catch` expects exactly three arguments.

| (robin (0 1) ((pure (0 1) *) (exception (0 1) *))
|   (catch error error))
? uncaught exception: (illegal-arguments error error)

| (robin (0 1) ((pure (0 1) *) (exception (0 1) *))
|   (catch error error (head #f) 23))
? uncaught exception: (illegal-arguments error error (head #f) 23)

### Re-exported Functions ###

Because it would be reasonable to find it here by categorization, this
module re-exports the macro `raise` from `core`.

| (robin (0 1) ((exception (0 1) *))
|   (catch error error (raise 799)))
= 799
