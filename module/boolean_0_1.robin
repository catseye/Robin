(robin (0 . 1) (small (0 . 1) env (0 . 1))
  (let (
    (and (macro (self args env)
      (if (equal? args ())
        #t
        (if (eval env (head args))
          (eval env (pair self (tail args)))
          #f))))
    (or (macro (self args env)
      (if (equal? args ())
        #f
        (if (eval env (head args))
          #t
          (eval env (pair self (tail args)))))))
    (not (fun (a)
      (if a #f #t)))
    (xor (fun (a b)
      (or (and a (not b)) (and (not a) b))))
    )
    (export and or not xor)))
