(robin (0 1) ((small (0 1) *) (list (0 1) *))
  ;''Should really be a part of small, but prototyping
     it here now.''
  (let (
    (bind-args
      (macro (self args env)
        (let (
          (id-list       (head args))
          (orig-val-list (eval env (head (tail args))))
          (given-env     (eval env (head (tail (tail args)))))
          (expr          (head (tail (tail (tail args)))))
          (bind-args-r   (fun (self id-list val-list env-acc)
            ;''This will need to be converted into a macro at some point,
               but for now, this is easier.''
            (if (empty? id-list)
              (if (empty? val-list)
                env-acc
                (raise (list (literal illegal-arguments) orig-val-list)))
              (if (empty? val-list)
                (raise (list (literal illegal-arguments) orig-val-list))
                (self self (tail id-list) (tail val-list)
                      (prepend
                        (list (head id-list) (eval given-env (head val-list)))
                        env-acc))))))
          (new-env (bind-args-r bind-args-r id-list orig-val-list env))
          )
          (eval new-env expr))))
    )
    (list
      (list (literal bind-args) bind-args)
    )))