;'<<SPEC'

    -> Tests for functionality "Evaluate Robin Expression (with List)"

    | (lookup (literal b) (literal ((a 1) (b 2) (c 3))))
    = (2)

    | (lookup (literal a) (literal ((a 1) (a 2) (a 3))))
    = (1)

    | (lookup (literal r) (literal ((a 1) (b 2) (c 3))))
    = ()

    | (lookup (literal q) ())
    = ()

    | (lookup (literal q) 55)
    ? uncaught exception: (expected-list 55)

    | (lookup (literal q) (literal ((a 7) 99 (q 4))))
    ? uncaught exception: (expected-list 99)

'<<SPEC'

(define lookup (fun (id alist)
  (bind lookup-r (fun (self id alist)
    (if (empty? alist)
      ()
      (if (equal? id (head (head alist)))
        (list (head (tail (head alist))))
        (self self id (tail alist)))))
    (lookup-r lookup-r id alist))))
