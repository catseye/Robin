;'<<SPEC'

### `macro?` ###

    -> Tests for functionality "Evaluate core Robin Expression"

`macro?` evaluates its argument, then evaluates to `#t` if it is a macro,
or `#f` if it is not.

    | (macro? (macro (self args env) args))
    = #t

TODO: this should probably be false.  Intrinsics are slightly different
from macros.  Either that, or, it should be, like `applyable?`, or
something.

    | (macro? macro)
    = #t

    | (macro? ((macro (self args env) (head args)) macro))
    = #f

    | (macro? 5)
    = #f

The argument to `macro?` may (naturally) be any type, but there must be
exactly one argument.

    | (macro? macro macro)
    ? uncaught exception: (illegal-arguments (macro macro))

    | (macro?)
    ? uncaught exception: (illegal-arguments ())

'<<SPEC'

(require macro?)
