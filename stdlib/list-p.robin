;'<<SPEC'

### `list?` ###

    -> Tests for functionality "Evaluate core Robin Expression"

`list?` evaluates its argument, then evaluates to `#t` if it is a list,
`#f` otherwise.

    |   (list? ((macro (s a e) (head a)) (a b)))
    = #t

    |   (list? ((macro (s a e) (head a)) (a b c d e f)))
    = #t

    |   (list? (prepend 4 (prepend 5 ())))
    = #t

The empty list is a list.

    |   (list? ())
    = #t

Symbols are not lists.

    |   (list? ((macro (s a e) (head a)) a))
    = #f

The argument to `list?` may (naturally) be any type, but there must be
exactly one argument.

    |   (list? (prepend 4 ()) (prepend 6 ()))
    ? uncaught exception: (illegal-arguments ((prepend 4 ()) (prepend 6 ())))

    |   (list?)
    ? uncaught exception: (illegal-arguments ())

'<<SPEC'

(require list?)
