(define env (@macro (self args env) env))

;'XXX'

    -> Tests for functionality "Interpret Robin Program (with Small)"

`env` evaluates to all the bindings in effect at the point of execution
where this form is encountered, as an alist.

    | (display
    |   (bind find (@macro (self args env)
    |                (bind-args (alist key) args env
    |                  (@if (@equal? alist (literal ())) (literal ())
    |                    (@if (@equal? key (@head (@head alist)))
    |                       (@head alist)
    |                       (self (@tail alist) key)))))
    |     (@prepend
    |       (find (env) (literal @symbol?)) (find (env) (literal @prepend)))))
    = ((@symbol? @symbol?) @prepend @prepend)

`env` expects no arguments.  Any arguments supplied will be simply ignored
and discarded, without being evaluated.

    | (display
    |   (bind find (@macro (self args env)
    |                (bind-args (alist key) args env
    |                  (@if (@equal? alist (literal ())) (literal ())
    |                    (@if (@equal? key (@head (@head alist)))
    |                       (@head alist)
    |                       (self (@tail alist) key)))))
    |     (@prepend
    |       (find (env find) (literal @symbol?))
    |       (find (env (goofah whatever)) (literal @prepend)))))
    = ((@symbol? @symbol?) @prepend @prepend)

'XXX'
