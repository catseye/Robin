;'<<SPEC'

### `number?` ###

    -> Tests for functionality "Interpret core Robin Program"

`number?` evaluates its argument, then evaluates to `#t` if it is a
number, `#f` otherwise.

    | (display
    |   (number? 7))
    = #t

    | (display
    |   (number? 0))
    = #t

    | (display
    |   (number? ()))
    = #f

    | (display
    |   (number? #t))
    = #f

    | (define literal (macro (s a e) (head a)))
    | (display
    |   (number? (literal seven)))
    = #f

That's a good question...

    | (define literal (macro (s a e) (head a)))
    | (display
    |   (number? (literal 7)))
    = #t

The argument to `number?` may (naturally) be any type, but there must be
exactly one argument.

    | (display
    |   (number? 6 4))
    ? uncaught exception: (illegal-arguments (6 4))

    | (display
    |   (number?))
    ? uncaught exception: (illegal-arguments ())

'<<SPEC'
