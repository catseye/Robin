;'<<SPEC'

    -> Tests for functionality "Evaluate Robin Expression (with List)"

    | (extend (literal b) 6 (literal ((a 1) (b 2) (c 3))))
    = ((b 6) (a 1) (b 2) (c 3))

The following should be true for any identifier i and alist x.

    | (let ((i (literal a))
    |       (x (literal ((f 5) (g 7)))))
    |   (lookup i (extend i 1 x)))
    = (1)

    | (extend (literal b) 6 ())
    = ((b 6))

    | (extend (literal b) 6 81)
    ? abort (expected-list 81)

'<<SPEC'

(define extend (fun (id val alist)
  (prepend (list id val) alist)))
